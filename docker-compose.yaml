version: '3'

###
# Fin Server from deployed DockerHub container images
###
services:

  ###
  # Font End NodeJS Application Server
  ###
  gateway:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    ports:
      - ${HOST_PORT:-3001}:3001
    env_file:
      - .env
    depends_on:
      - fcrepo
      - redis
      - elasticsearch
    command: npm run gateway

  ###
  # Fedora Repository
  ###
  fcrepo:
    image: gcr.io/ucdlib-pubreg/fin-fcrepo:sandbox
    ports:
      - ${FCREPO_HOST_PORT:-8080}:8080
    volumes:
      - fedora-data:/usr/local/tomcat/fcrepo-home/data
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env

  ###
  # Fedora Postgres Service
  ###
  postgres:
    image: gcr.io/ucdlib-pubreg/fin-postgres:sandbox
    environment: 
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg-data:/var/lib/postgresql/data

  ###
  # Fin Init Service
  ###
  init:
    image: gcr.io/ucdlib-pubreg/dams-init:sandbox

  ###
  # Trusted Proxy for Services
  ###
  trustedproxy:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - fcrepo
    command: npm run trusted-proxy

  ###
  # Session, admin store
  ###
  redis:
    image: redis:3.2
    volumes:
      - redis-data:/data
    depends_on:
      - fcrepo

  ###
  # UC DAMS Client API
  ###
  api:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - elasticsearch
    command: npm run api

  finac:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.jso
    env_file:
      - .env
    command: node fin-ac/index.js

  ###
  # UC DAMS Client UI
  ###
  ucd-lib-client:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - elasticsearch
    command: node ucd-lib-client/index.js

  ###
  # ES Indexer
  ###
  essync:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - gateway
    command: npm run essync

  ###
  # GCS - Access & Sync
  ###
  gcs:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - gateway
    command: npm run gcs

  ###
  # Search
  ###
  elasticsearch:
    image: gcr.io/ucdlib-pubreg/fin-elastic-search:sandbox
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    depends_on:
      - fcrepo

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.3
    ports:
      - ${KIBANA_HOST_PORT:-5601}:5601
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - xpack.security.enabled=false
      - telemetry.enabled=false
    depends_on:
      - elasticsearch

  ###
  # IIIF Service
  ###
  loris:
    image: gcr.io/ucdlib-pubreg/dams-loris:sandbox
    depends_on:
      - fcrepo
    env_file:
      - .env
    volumes:
      - loris-cache:/var/cache/loris

  ###
  # Fin Workflows
  ###
  workflow:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - gateway
    command: node workflow/index.js

  ###
  # OIDC AuthenticationService
  ###
  oidc:
    image: gcr.io/ucdlib-pubreg/dams-base-service:sandbox
    volumes:
      - ${GCLOUD_SERVICE_ACCOUNT_MOUNT:-./service-account.json}:/etc/fin/service-account.json
    env_file:
      - .env
    depends_on:
      - gateway
    command: npm run oidc


###
# Docker data volumes
###
volumes:
  fedora-data:
    driver: local
  pg-data:
    driver: local
  es-data:
    driver: local
  redis-data:
    driver: local
  loris-cache:
    driver: local